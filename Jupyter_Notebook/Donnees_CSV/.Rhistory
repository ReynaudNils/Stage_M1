unlis(Liste[2])
unlist(Liste[2])
unlist(Liste2[2])
for i in range(10):
unlist(Liste2[1])
for (i in 1:10){
#Sum of Squares
opt.f <- function(s) sum((log(unlist(Liste2[i]))-loglikzipf(s,length(Liste2[i])))^2)
opt <- optimize(opt.f, c(0, 10))
opt
}
for (i in 1:10){
#Sum of Squares
opt.f <- function(s) sum((log(unlist(Liste2[i]))-loglikzipf(s,length(Liste2[i])))^2)
opt <- optimize(opt.f, c(0, 10))
print(opt)
}
Liste3 = list("Acacia", "Trifolium", "Hypericum", "Ophrys", "Anemone", "Cirsium", "Pelargonium", "Peperomia", "Lupinus", "Dryopteris")
for (i in 1:10){
#Sum of Squares
opt.f <- function(s) sum((log(unlist(Liste2[i]))-loglikzipf(s,length(Liste2[i])))^2)
opt <- optimize(opt.f, c(0, 10))
print(Liste3[i],opt)
}
Liste3[2]
Liste3 = c("Acacia", "Trifolium", "Hypericum", "Ophrys", "Anemone", "Cirsium", "Pelargonium", "Peperomia", "Lupinus", "Dryopteris")
Liste3[2]
for (i in 1:10){
#Sum of Squares
opt.f <- function(s) sum((log(unlist(Liste2[i]))-loglikzipf(s,length(Liste2[i])))^2)
opt <- optimize(opt.f, c(0, 10))
print(Liste3[i],opt)
}
for (i in 1:10){
#Sum of Squares
opt.f <- function(s) sum((log(unlist(Liste2[i]))-loglikzipf(s,length(Liste2[i])))^2)
opt <- optimize(opt.f, c(0, 10))
print(Liste3[i])
print(opt)
}
for (i in 1:10){
print(Liste3[i])
#Sum of Squares
opt.f <- function(s) sum((log(unlist(Liste2[i]))-loglikzipf(s,length(Liste2[i])))^2)
opt <- optimize(opt.f, c(0, 10))
print(opt)
#Maximum likelihood estimation
negloglikzipf <- function(s) sum(unlist(Liste[i])*(s*log(1:length(Liste2[i]))+log(sum(1/(1:length(Liste2[i]))^s))))
fit <- mle(negloglikzipf,start=list(s=1))
print(fit)
}
for (i in 1:10){
print(Liste3[i])
#Sum of Squares
opt.f <- function(s) sum((log(unlist(Liste2[i]))-loglikzipf(s,length(Liste2[i])))^2)
opt <- optimize(opt.f, c(0, 10))
print(opt)
#Maximum likelihood estimation
negloglikzipf <- function(s) sum(unlist(Liste[i])*(s*log(1:length(Liste2[i]))+log(sum(1/(1:length(Liste2[i]))^s))))
#fit <- mle(negloglikzipf,start=list(s=1))
#print(fit)
}
for (i in 1:10){
print(Liste3[i])
#Sum of Squares
opt.f <- function(s) sum((log(unlist(Liste2[i]))-loglikzipf(s,length(Liste2[i])))^2)
opt <- optimize(opt.f, c(0, 10))
print(opt)
#Maximum likelihood estimation
negloglikzipf <- function(s) sum(unlist(Liste[i])*(s*log(1:length(Liste2[i]))+log(sum(1/(1:length(Liste2[i]))^s))))
fit <- mle(negloglikzipf,start=list(s=1))
#print(fit)
}
Genera_Acacia <- read.csv('Especes_Acacia.csv')
fr3 <- unlist(Genera_Acacia['Images_Acacia'])
p3 <- fr3/sum(fr3)
len <- length(p3)
len
len <- length(p3)
len
loglikzipf <- function(s,N) -s*log(1:N)-log(sum(1/(1:N)^s))
#Sum of Squares
opt.f <- function(s) sum((log(p3)-loglikzipf(s,length(p3)))^2)
opt <- optimize(opt.f, c(0, 10))
opt
#Maximum likelihood estimation
negloglikzipf <- function(s) sum(fr3*(s*log(1:len)+log(sum(1/(1:len)^s))))
fit <- mle(negloglikzipf,start=list(s=1))
fit
s.sq <- opt$minimum
s.ll <- coef(fit)
s.sq
s.ll
plot(1:len,p3,log="xy")
lines(1:len,exp(lzipf(s.sq,len)),col=2)
lines(1:len,exp(lzipf(s.ll,len)),col=3)
typeof(p3)
library(stats4)
Species <- read.csv("Especes.csv")
Genera <- read.csv("Especes2.csv")
Genera_Acacia <- read.csv('Especes_Acacia.csv')
fr <- unlist(Species['Images_Plante'])
p <- fr/sum(fr)
fr2 <- unlist(Genera['Images_Genre'])
p2 <- fr2/sum(fr2)
fr3 <- unlist(Genera_Acacia['Images_Acacia'])
p3 <- fr3/sum(fr3)
typeof(p3)
len <- length(p3)
len
loglikzipf <- function(s,N) -s*log(1:N)-log(sum(1/(1:N)^s))
#Sum of Squares
opt.f <- function(s) sum((log(p3)-loglikzipf(s,length(p3)))^2)
opt <- optimize(opt.f, c(0, 10))
#Maximum likelihood estimation
negloglikzipf <- function(s) sum(fr3*(s*log(1:len)+log(sum(1/(1:len)^s))))
fit <- mle(negloglikzipf,start=list(s=1))
s.sq <- opt$minimum
s.ll <- coef(fit)
opt
fit
plot(1:len,p3,log="xy")
lines(1:len,exp(lzipf(s.sq,len)),col=2)
lines(1:len,exp(lzipf(s.ll,len)),col=3)
library(stats4)
Species <- read.csv("Especes.csv")
Genera <- read.csv("Especes2.csv")
Genera_Trifolium <- read.csv('Especes_Trifolium.csv')
fr <- unlist(Species['Images_Plante'])
p <- fr/sum(fr)
fr2 <- unlist(Genera['Images_Genre'])
p2 <- fr2/sum(fr2)
fr3 <- unlist(Genera_Trifolium['Images_Trifolium'])
p3 <- fr3/sum(fr3)
typeof(p3)
len <- length(p3)
len
loglikzipf <- function(s,N) -s*log(1:N)-log(sum(1/(1:N)^s))
#Sum of Squares
opt.f <- function(s) sum((log(p3)-loglikzipf(s,length(p3)))^2)
opt <- optimize(opt.f, c(0, 10))
#Maximum likelihood estimation
negloglikzipf <- function(s) sum(fr3*(s*log(1:len)+log(sum(1/(1:len)^s))))
fit <- mle(negloglikzipf,start=list(s=1))
s.sq <- opt$minimum
s.ll <- coef(fit)
opt
fit
plot(1:len,p3,log="xy")
lines(1:len,exp(lzipf(s.sq,len)),col=2)
lines(1:len,exp(lzipf(s.ll,len)),col=3)
library(stats4)
Species <- read.csv("Especes.csv")
fr <- unlist(Species['Images_Plante'])
p <- fr/sum(fr)
typeof(p)
len <- length(p)
len
loglikzipf <- function(s,N) -s*log(1:N)-log(sum(1/(1:N)^s))
#Sum of Squares
opt.f <- function(s) sum((log(p)-loglikzipf(s,length(p)))^2)
opt <- optimize(opt.f, c(0, 10))
#Maximum likelihood estimation
negloglikzipf <- function(s) sum(fr*(s*log(1:len)+log(sum(1/(1:len)^s))))
fit <- mle(negloglikzipf,start=list(s=1))
s.sq <- opt$minimum
s.ll <- coef(fit)
opt
fit
plot(1:len,p,log="xy")
lines(1:len,exp(lzipf(s.sq,len)),col=2)
lines(1:len,exp(lzipf(s.ll,len)),col=3)
library(stats4)
Data <- read.csv("Especes.csv")
fr <- unlist(Data['Images_Plante'])
p <- fr/sum(fr)
typeof(p)
len <- length(p)
len
loglikzipf <- function(s,N) -s*log(1:N)-log(sum(1/(1:N)^s))
#Sum of Squares
opt.f <- function(s) sum((log(p)-loglikzipf(s,length(p)))^2)
opt <- optimize(opt.f, c(0, 10))
#Maximum likelihood estimation
negloglikzipf <- function(s) sum(fr*(s*log(1:len)+log(sum(1/(1:len)^s))))
fit <- mle(negloglikzipf,start=list(s=1))
s.sq <- opt$minimum
s.ll <- coef(fit)
opt
fit
plot(1:len,p,log="xy")
lines(1:len,exp(lzipf(s.sq,len)),col=2)
lines(1:len,exp(lzipf(s.ll,len)),col=3)
library(stats4)
Data <- read.csv("Especes2.csv")
Data
fr <- unlist(Data['Images_Genre'])
p <- fr/sum(fr)
typeof(p)
len <- length(p)
len
loglikzipf <- function(s,N) -s*log(1:N)-log(sum(1/(1:N)^s))
#Sum of Squares
opt.f <- function(s) sum((log(p)-loglikzipf(s,length(p)))^2)
opt <- optimize(opt.f, c(0, 10))
#Maximum likelihood estimation
negloglikzipf <- function(s) sum(fr*(s*log(1:len)+log(sum(1/(1:len)^s))))
fit <- mle(negloglikzipf,start=list(s=1))
s.sq <- opt$minimum
s.ll <- coef(fit)
opt
fit
plot(1:len,p,log="xy")
lines(1:len,exp(lzipf(s.sq,len)),col=2)
lines(1:len,exp(lzipf(s.ll,len)),col=3)
library(stats4)
Data <- read.csv("Especes_Sedum.csv")
Data
fr <- unlist(Data['Images_Sedum'])
p <- fr/sum(fr)
typeof(p)
len <- length(p)
len
loglikzipf <- function(s,N) -s*log(1:N)-log(sum(1/(1:N)^s))
#Sum of Squares
opt.f <- function(s) sum((log(p)-loglikzipf(s,length(p)))^2)
opt <- optimize(opt.f, c(0, 10))
#Maximum likelihood estimation
negloglikzipf <- function(s) sum(fr*(s*log(1:len)+log(sum(1/(1:len)^s))))
fit <- mle(negloglikzipf,start=list(s=1))
s.sq <- opt$minimum
s.ll <- coef(fit)
opt
fit
plot(1:len,p,log="xy")
lines(1:len,exp(lzipf(s.sq,len)),col="red")
lines(1:len,exp(lzipf(s.ll,len)),col="blue")
title(main = "Comparaison et fitting Zipf avec Moindre Carrés et Max de Vraisemblance")
library(stats4)
Data <- read.csv("Especes_Sedum.csv")
Data
fr <- unlist(Data['Images_Sedum'])
p <- fr/sum(fr)
typeof(p)
len <- length(p)
len
loglikzipf <- function(s,N) -s*log(1:N)-log(sum(1/(1:N)^s))
#Sum of Squares
opt.f <- function(s) sum((log(p)-loglikzipf(s,length(p)))^2)
opt <- optimize(opt.f, c(0, 10))
#Maximum likelihood estimation
negloglikzipf <- function(s) sum(fr*(s*log(1:len)+log(sum(1/(1:len)^s))))
fit <- mle(negloglikzipf,start=list(s=1))
s.sq <- opt$minimum
s.ll <- coef(fit)
opt
fit
plot(1:len,p,log="xy")
lines(1:len,exp(lzipf(s.sq,len)),col="red")
lines(1:len,exp(lzipf(s.ll,len)),col="blue")
title(main = "Comparaison et fitting Zipf avec Moindre Carrés et Max de Vraisemblance")
plot(1:len,p,log="xy")
lines(1:len,exp(loglikzipf(s.sq,len)),col="red")
lines(1:len,exp(loglikzipf(s.ll,len)),col="blue")
chisq.test(p, exp(loglikzipf(s,length(p))))
chisq.test(p, exp(loglikzipf(opt$minimum,length(p))))
library(stats4)
Data <- read.csv("Especes.csv")
Data
fr <- unlist(Data['Images_Plante'])
p <- fr/sum(fr)
typeof(p)
len <- length(p)
len
loglikzipf <- function(s,N) -s*log(1:N)-log(sum(1/(1:N)^s))
#Sum of Squares
opt.f <- function(s) sum((log(p)-loglikzipf(s,length(p)))^2)
opt <- optimize(opt.f, c(0, 10))
#Maximum likelihood estimation
negloglikzipf <- function(s) sum(fr*(s*log(1:len)+log(sum(1/(1:len)^s))))
fit <- mle(negloglikzipf,start=list(s=1))
s.sq <- opt$minimum
s.ll <- coef(fit)
opt
fit
plot(1:len,p,log="xy")
lines(1:len,exp(loglikzipf(s.sq,len)),col="red")
lines(1:len,exp(loglikzipf(s.ll,len)),col="blue")
title(main = "Comparaison et fitting Zipf avec Moindre Carrés et Max de Vraisemblance")
chisq.test(p, exp(loglikzipf(opt$minimum,length(p))))
library(stats4)
Data <- read.csv("Especes2.csv")
Data
fr <- unlist(Data['Images_Genre'])
p <- fr/sum(fr)
typeof(p)
len <- length(p)
len
loglikzipf <- function(s,N) -s*log(1:N)-log(sum(1/(1:N)^s))
#Sum of Squares
opt.f <- function(s) sum((log(p)-loglikzipf(s,length(p)))^2)
opt <- optimize(opt.f, c(0, 10))
#Maximum likelihood estimation
negloglikzipf <- function(s) sum(fr*(s*log(1:len)+log(sum(1/(1:len)^s))))
fit <- mle(negloglikzipf,start=list(s=1))
s.sq <- opt$minimum
s.ll <- coef(fit)
opt
fit
plot(1:len,p,log="xy")
lines(1:len,exp(loglikzipf(s.sq,len)),col="red")
lines(1:len,exp(loglikzipf(s.ll,len)),col="blue")
title(main = "Comparaison et fitting Zipf avec Moindre Carrés et Max de Vraisemblance")
chisq.test(p, exp(loglikzipf(opt$minimum,length(p))))
library(stats4)
Data <- read.csv("Especes_Sedum.csv")
Data
fr <- unlist(Data['Images_Sedum'])
p <- fr/sum(fr)
typeof(p)
len <- length(p)
len
loglikzipf <- function(s,N) -s*log(1:N)-log(sum(1/(1:N)^s))
#Sum of Squares
opt.f <- function(s) sum((log(p)-loglikzipf(s,length(p)))^2)
opt <- optimize(opt.f, c(0, 10))
#Maximum likelihood estimation
negloglikzipf <- function(s) sum(fr*(s*log(1:len)+log(sum(1/(1:len)^s))))
fit <- mle(negloglikzipf,start=list(s=1))
s.sq <- opt$minimum
s.ll <- coef(fit)
opt
fit
plot(1:len,p,log="xy")
lines(1:len,exp(loglikzipf(s.sq,len)),col="red")
lines(1:len,exp(loglikzipf(s.ll,len)),col="blue")
title(main = "Comparaison et fitting Zipf avec Moindre Carrés et Max de Vraisemblance")
chisq.test(p, exp(loglikzipf(opt$minimum,length(p))))
help(optimize)
help(optim)
help(optimize)
help(optim)
library(stats4)
Data <- read.csv("Especes_Sedum.csv")
Data
fr <- unlist(Data['Images_Sedum'])
p <- fr/sum(fr)
typeof(p)
len <- length(p)
len
loglikzipf <- function(s,q,N) -s*log(1:N + q)-log(sum(1/(1:N + q)^s))
#Sum of Squares
opt.f <- function(s,q) sum((log(p)-loglikzipf(s,q,length(p)))^2)
opt <- optim(par = c(2, 4), opt.f, lower = c(0,0))
loglikzipf <- function(parms,N) -s*log(1:N + parms[1])-log(sum(1/(1:N + parms[1])^parms[2]))
#Sum of Squares
opt.f <- function(s,q) sum((log(p)-loglikzipf(s,q,length(p)))^2)
opt <- optim(par = c(2, 4), opt.f, lower = c(0,0))
loglikzipf <- function(parms,N) -s*log(1:N + parms[1])-log(sum(1/(1:N + parms[1])^parms[2]))
#Sum of Squares
opt.f <- function(parms) sum((log(p)-loglikzipf(parms,length(p)))^2)
opt <- optim(par = c(2, 4), opt.f, lower = c(0,0))
loglikzipf <- function(parms,N) -parms[2]*log(1:N + parms[1])-log(sum(1/(1:N + parms[1])^parms[2]))
#Sum of Squares
opt.f <- function(parms) sum((log(p)-loglikzipf(parms,length(p)))^2)
opt <- optim(par = c(2, 4), opt.f, lower = c(0,0))
#optim =
loglikzipf <- function(parms,N) -parms[2]*log(1:N + parms[1])-log(sum(1/(1:N + parms[1])^parms[2]))
#Sum of Squares
opt.f <- function(parms) sum((log(p)-loglikzipf(parms,length(p)))^2)
opt <- optim(par = c(2, 4), opt.f, lower = c(0,0), method = "L-BFGS-B")
#optim
opt
plot(1:len,p,log="xy")
lines(1:len,exp(loglikzipf(s.sq,len)),col="red")
s.sq <- opt$par
s.sq
typeof(s.sq)
s.sq[1]
s.sq <- opt$par
plot(1:len,p,log="xy")
lines(1:len,exp(loglikzipf(c(s.sq[1], s.sq[2]),len)),col="red")
#Maximum likelihood estimation
negloglikzipf <- function(parms) sum(fr*(parms[2]*log(1:len +parms[1])+log(sum(1/(1:len + parms[1])^parms[2]))))
fit <- mle(negloglikzipf,start=list(s=1))
help(mle)
fit <- mle(negloglikzipf,start=c(2, 4))
#Maximum likelihood estimation
negloglikzipf <- function(parms1, parms2) sum(fr*(parms2*log(1:len +parms1)+log(sum(1/(1:len + parms1)^parms2))))
fit <- mle(negloglikzipf,start=list(parms1=2, parms2=4))
s.ll <- coef(fit)
fit
s.ll
s.ll[1]
plot(1:len,p,log="xy")
lines(1:len,exp(loglikzipf(c(s.sq[1], s.sq[2]),len)),col="red")
lines(1:len,exp(loglikzipf(c(s.ll[1], s.ll[2]),len)),col="blue")
title(main = "Comparaison et fitting Zipf avec Moindre Carrés et Max de Vraisemblance")
chisq.test(p, exp(loglikzipf(opt$par,length(p))))
library(stats4)
Data <- read.csv("Especes.csv")
Data
fr <- unlist(Data['Images_Plante'])
p <- fr/sum(fr)
typeof(p)
len <- length(p)
len
loglikzipf <- function(parms,N) -parms[2]*log(1:N + parms[1])-log(sum(1/(1:N + parms[1])^parms[2]))
#Sum of Squares
opt.f <- function(parms) sum((log(p)-loglikzipf(parms,length(p)))^2)
opt <- optim(par = c(2, 4), opt.f, lower = c(0,0), method = "L-BFGS-B")
#Maximum likelihood estimation
negloglikzipf <- function(parms1, parms2) sum(fr*(parms2*log(1:len +parms1)+log(sum(1/(1:len + parms1)^parms2))))
fit <- mle(negloglikzipf,start=list(parms1=2, parms2=4))
s.sq <- opt$par
s.ll <- coef(fit)
typeof(s.sq)
s.sq[1]
s.ll[1]
opt
fit
plot(1:len,p,log="xy")
lines(1:len,exp(loglikzipf(c(s.sq[1], s.sq[2]),len)),col="red")
lines(1:len,exp(loglikzipf(c(s.ll[1], s.ll[2]),len)),col="blue")
title(main = "Comparaison et fitting Zipf avec Moindre Carrés et Max de Vraisemblance")
plot(1:len,p)
lines(1:len,exp(loglikzipf(c(s.sq[1], s.sq[2]),len)),col="red")
lines(1:len,exp(loglikzipf(c(s.ll[1], s.ll[2]),len)),col="blue")
plot(1:len,p)
lines(1:len,exp(loglikzipf(c(s.sq[1], s.sq[2]),len)),col="red")
lines(1:len,exp(loglikzipf(c(s.ll[1], s.ll[2]),len)),col="blue")
title(main = "Comparaison et fitting Zipf avec Moindre Carrés et Max de Vraisemblance")
legend(x = "topright", legend = c("Moindre Carrés", "Max Vraisemblance"))
legend(x = "topright", legend = c("Moindre Carrés", "Max Vraisemblance"), col = c("red", "blue"))
legend(x = "topright", legend = c("Moindre Carrés", "Max Vraisemblance"), col = c("red", "blue"), lty = 1:2, cex = 0.8)
plot(1:len,p)
lines(1:len,exp(loglikzipf(c(s.sq[1], s.sq[2]),len)),col="red")
lines(1:len,exp(loglikzipf(c(s.ll[1], s.ll[2]),len)),col="blue")
title(main = "Comparaison et fitting Zipf avec Moindre Carrés et Max de Vraisemblance")
legend(x = "topright", legend = c("Moindre Carrés", "Max Vraisemblance"), col = c("red", "blue"), lty = 1:2, cex = 0.8)
plot(1:len,p)
lines(1:len,exp(loglikzipf(c(s.sq[1], s.sq[2]),len)),col="red")
lines(1:len,exp(loglikzipf(c(s.ll[1], s.ll[2]),len)),col="blue")
title(main = "Comparaison et fitting Zipf avec Moindre Carrés et Max de Vraisemblance")
legend(x = "topright", legend = c("Moindre Carrés", "Max Vraisemblance"), col = c("red", "blue"), lty = 1, cex = 0.8)
#l
plot(1:len,p, xlab=Species, ylab=Frequencies)
plot(1:len,p, xlab="Species", ylab="Frequencies")
lines(1:len,exp(loglikzipf(c(s.sq[1], s.sq[2]),len)),col="red")
lines(1:len,exp(loglikzipf(c(s.ll[1], s.ll[2]),len)),col="blue")
title(main = "Comparaison et fitting Zipf avec Moindre Carrés et Max de Vraisemblance")
legend(x = "topright", legend = c("Moindre Carrés", "Max Vraisemblance"), col = c("red", "blue"), lty = 1, cex = 0.8)
library(stats4)
getwd()
setwd('C:/Users/nilsr/Desktop/PRE/Stage_M1/Jupyter_Notebook/Donnees_CSV')
Data <- read.csv("Especes2.csv")
Data
fr <- unlist(Data['Images_Genre'])
p <- fr/sum(fr)
typeof(p)
len <- length(p)
len
loglikzipf <- function(parms,N) -parms[2]*log(1:N + parms[1])-log(sum(1/(1:N + parms[1])^parms[2]))
#Sum of Squares
opt.f <- function(parms) sum((log(p)-loglikzipf(parms,length(p)))^2)
opt <- optim(par = c(2, 4), opt.f, lower = c(0,0), method = "L-BFGS-B")
#Maximum likelihood estimation
negloglikzipf <- function(parms1, parms2) sum(fr*(parms2*log(1:len +parms1)+log(sum(1/(1:len + parms1)^parms2))))
fit <- mle(negloglikzipf,start=list(parms1=2, parms2=4))
s.sq <- opt$par
s.ll <- coef(fit)
typeof(s.sq)
s.sq[1]
s.ll[1]
opt
fit
plot(1:len,p, xlab="Species", ylab="Frequencies")
lines(1:len,exp(loglikzipf(c(s.sq[1], s.sq[2]),len)),col="red")
lines(1:len,exp(loglikzipf(c(s.ll[1], s.ll[2]),len)),col="blue")
title(main = "Comparaison et fitting Zipf avec Moindre Carrés et Max de Vraisemblance")
legend(x = "topright", legend = c("Moindre Carrés", "Max Vraisemblance"), col = c("red", "blue"), lty = 1, cex = 0.8)
chisq.test(p, exp(loglikzipf(opt$par,length(p))))
library(stats4)
getwd()
setwd('C:/Users/nilsr/Desktop/PRE/Stage_M1/Jupyter_Notebook/Donnees_CSV')
Data <- read.csv("Especes_Sedum.csv")
Data
fr <- unlist(Data['Images_Sedum'])
p <- fr/sum(fr)
typeof(p)
len <- length(p)
len
loglikzipf <- function(parms,N) -parms[2]*log(1:N + parms[1])-log(sum(1/(1:N + parms[1])^parms[2]))
#Sum of Squares
opt.f <- function(parms) sum((log(p)-loglikzipf(parms,length(p)))^2)
opt <- optim(par = c(2, 4), opt.f, lower = c(0,0), method = "L-BFGS-B")
#Maximum likelihood estimation
negloglikzipf <- function(parms1, parms2) sum(fr*(parms2*log(1:len +parms1)+log(sum(1/(1:len + parms1)^parms2))))
fit <- mle(negloglikzipf,start=list(parms1=2, parms2=4))
s.sq <- opt$par
s.ll <- coef(fit)
typeof(s.sq)
s.sq[1]
s.ll[1]
opt
fit
plot(1:len,p, xlab="Species", ylab="Frequencies")
lines(1:len,exp(loglikzipf(c(s.sq[1], s.sq[2]),len)),col="red")
lines(1:len,exp(loglikzipf(c(s.ll[1], s.ll[2]),len)),col="blue")
title(main = "Comparaison et fitting Zipf avec Moindre Carrés et Max de Vraisemblance")
legend(x = "topright", legend = c("Moindre Carrés", "Max Vraisemblance"), col = c("red", "blue"), lty = 1, cex = 0.8)
chisq.test(p, exp(loglikzipf(opt$par,length(p))))
